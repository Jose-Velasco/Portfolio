name: Deploy Frontend with github pages
on:
  push:
    branches: ["master"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Injecting environment Variables
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: python setFrontendProdApiUrl.py
        env:
          baseHrefUrl: ${{ secrets.BASEHREFURL }}
          baseBackendURL: ${{ secrets.BASEBACKENDURL }}
          backendApiURL: ${{ secrets.BACKENDAPIURL }}

      - name: Use Node.js 12.11.1
        uses: actions/setup-node@v1
        with:
          node-version: 12.11.1

      - name: cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          # name of the cache key includes package-lock.json
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        # if cache hits then skip this step.
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Build
        run: |
          npm run build --prod --base-href "https://jose-velasco.github.io/Portfolio/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist/ng-portfolio

  deploy-to-Pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
